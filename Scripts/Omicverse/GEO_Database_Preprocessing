import os
import glob
import pandas as pd

# -------------------------------
# 1. Load gene annotation file with low_memory=False to avoid dtype warnings
# -------------------------------
annot_file = "data/GSE81277/annotation/Human.GRCh38.p13.annot.tsv.gz"
annot_df = pd.read_csv(annot_file, sep="\t", compression="gzip", low_memory=False)

# Print annotation file columns to inspect available column names
print("Annotation file columns:", annot_df.columns.tolist())

# OPTIONAL- Strip whitespace from column names for compatability
annot_df.columns = annot_df.columns.str.strip()

# -------------------------------
# 2. Determine the correct gene symbol column name
# -------------------------------
# Check for common alternatives. Update this list based on your file.
if 'GeneSymbol' in annot_df.columns:
    gene_symbol_col = 'GeneSymbol'
elif 'gene_symbol' in annot_df.columns:
    gene_symbol_col = 'gene_symbol'
elif 'Symbol' in annot_df.columns:
    gene_symbol_col = 'Symbol'
else:
    raise KeyError("Gene symbol column not found in annotation file. Check the column names above.")

# -------------------------------
# 3. Find and load all count files
# -------------------------------
count_files = glob.glob("data/GSE81277/*_raw_counts_GRCh38.p13_NCBI.tsv.gz")
print("Found count files:", count_files)

dfs = []  # list to store each sample's DataFrame

for file in count_files:
    # Derive sample name from the file name (e.g., "GSE82177")
    sample_name = os.path.basename(file).replace("_raw_counts_GRCh38.p13_NCBI.tsv.gz", "")
    
    # Read the count file
    df = pd.read_csv(file, sep="\t", compression="gzip")
    
    # Set 'GeneID' as the index so we can join on it later
    df = df.set_index("GeneID")
    
    # Rename the count column to the sample name (assumes one count column)
    count_col = df.columns[0]
    df = df.rename(columns={count_col: sample_name})
    
    dfs.append(df)

# -------------------------------
# 4. Combine all count DataFrames
# -------------------------------
counts_df = pd.concat(dfs, axis=1, join="inner")
print("Combined counts DataFrame shape:", counts_df.shape)

# -------------------------------
# 5. Merge counts with gene annotation
# -------------------------------
merged_df = counts_df.merge(annot_df[['GeneID', gene_symbol_col]],
                            left_index=True, right_on='GeneID', how='left')

# Set "GeneID" as the index for the final DataFrame
merged_df = merged_df.set_index("GeneID")

# Optionally, reorder columns so that the gene symbol appears first
cols = [gene_symbol_col] + [col for col in merged_df.columns if col != gene_symbol_col]
merged_df = merged_df[cols]

# -------------------------------
# 6. Display the final DataFrame
# -------------------------------
merged_df.head()

